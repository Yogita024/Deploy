{"version":3,"file":"static/js/373.40fbf47a.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Delete.js","components/ViewEmail.jsx","constants/constant.js","services/api.js","hooks/useApi.jsx","services/api.url.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","\r\n\r\nimport { Box, Typography, styled } from '@mui/material';\r\nimport { useOutletContext, useLocation } from 'react-router-dom';\r\nimport { emptyProfilePic } from '../constants/constant';\r\nimport { ArrowBack, Delete } from '@mui/icons-material';\r\nimport useApi from '../hooks/useApi';\r\nimport { API_URLS } from '../services/api.url';\r\n\r\nconst IconWrapper = styled(Box)({\r\n    padding: 15\r\n});\r\n\r\nconst Subject = styled(Typography)({\r\n    fontSize: 22,\r\n    margin: '10px 0 20px 75px',\r\n    display: 'flex'\r\n})\r\n\r\nconst Indicator = styled(Box)(\r\n    {\r\n        fontSize: '12px !important',\r\n        background: '#ddd',\r\n        color: '#222',\r\n        borderRadius: '4px',\r\n        marginLeft: '6px',\r\n        padding: '2px 4px',\r\n        alignSelf: 'center'\r\n\r\n    }\r\n)\r\n\r\n\r\n\r\nconst Image = styled('img')({\r\n    borderRadius: '50%',\r\n    width: 40,\r\n    height: 40,\r\n    margin: '5px 10px 0 10px',\r\n    backgroundColor: '#cccccc'\r\n});\r\n\r\nconst Container = styled(Box)({\r\n    marginLeft: 15,\r\n    width: '100%',\r\n    '& > div': {\r\n        display: 'flex',\r\n        '& > p > span': {\r\n            fontSize: 12,\r\n            color: '#5E5E5E'\r\n        }\r\n    }\r\n});\r\nconst EmailDate = styled(Typography)({\r\n    margin: '0 50px 0 auto',\r\n    fontSize: 12,\r\n    color: '#5E5E5E',\r\n});\r\n\r\nconst ViewEmail = () => {\r\n\r\n    const { openDrawer } = useOutletContext();\r\n\r\n    const { state } = useLocation();\r\n    const { email } = state;\r\n    const moveEmailsToBinService = useApi(API_URLS.moveEmailsToBin);\r\n\r\n    const deleteEmail = () => {\r\n        moveEmailsToBinService.call([email._id]);\r\n        window.history.back();\r\n    }\r\n\r\n    return (\r\n        <Box style={openDrawer ? { marginLeft: 250 } : { width: '100%' }}>\r\n            <IconWrapper>\r\n                <ArrowBack fontSize='small' color=\"action\" onClick={() => window.history.back()} />\r\n                <Delete fontSize='small' color=\"action\" style={{ marginLeft: 40 }} onClick={() => deleteEmail()} />\r\n            </IconWrapper>\r\n            <Subject>{email.subject} <Indicator component=\"span\">Inbox</Indicator>\r\n            </Subject>\r\n            <Box style={{ display: 'flex' }}>\r\n                <Image src={emptyProfilePic} alt=\"profile\" />\r\n                <Container>\r\n                    <Box>\r\n                        <Typography style={{ marginTop: '10px' }}>\r\n                            {email.name}\r\n\r\n                            <Box component=\"span\">&nbsp;&#60;{email.to}&#62;</Box>\r\n                        </Typography>\r\n\r\n                        <EmailDate>\r\n                            {new Date(email.date).toLocaleDateString([], {\r\n                                month: 'long',\r\n                                day: 'numeric',\r\n                                year: 'numeric',\r\n                            })},{\" \"}\r\n                            {new Date(email.date).toLocaleTimeString([], {\r\n                                hour: 'numeric',\r\n                                minute: 'numeric',\r\n                                hour12: true,\r\n                            })}\r\n                        </EmailDate>\r\n\r\n                    </Box>\r\n                    <Typography style={{ marginTop: 20 }}>{email.body}</Typography>\r\n                </Container>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ViewEmail;","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\r\nexport const emptyInbox = 'https://miro.medium.com/max/1088/1*DhOnyEHovQZ31rH00-VUDw.png';\r\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\r\n\r\nexport const VIEWS = {\r\n    inbox: 'inbox',\r\n    starred: 'starred',\r\n    sent: 'sent',\r\n    drafts: 'drafts',\r\n    allmail: 'allmail'\r\n   \r\n}\r\n\r\nexport const EMPTY_TABS = {\r\n    inbox: {\r\n        heading: 'Your inbox is empty',\r\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\r\n    },\r\n    drafts: {\r\n        heading: \"You don't have any saved drafts.\",\r\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\r\n    },\r\n    starred: {\r\n        heading: 'No starred messages',\r\n        subHeading: \"To star a message, click on the star outline beside any message or conversation.\"\r\n    },\r\n    sent: {\r\n        heading: 'No sent messages!',\r\n        subHeading: 'Send one now!'\r\n    },\r\n    bin: {\r\n        heading: 'No conversations in Bin.',\r\n        subHeading: ''\r\n    },\r\n    \r\n    allmail:{\r\n        heading: 'There are no mails to display.',\r\n        subHeading: 'Send some mails'\r\n    }\r\n    \r\n\r\n}","import axios from  'axios';\r\n\r\nconst API_URI ='';\r\nconst API_GMAIL =async(urlObject,payload,type) =>\r\n{\r\n   return axios(\r\n        {\r\n               method:urlObject.method,\r\n               url:  API_URI + '/' + urlObject.endpoint +'/' +type,\r\n               data: payload\r\n          }\r\n    )\r\n}\r\nexport default API_GMAIL;","import { useState } from \"react\";\r\nimport API from \"../services/api\";\r\n\r\n\r\nconst useApi=(urlObject)=>\r\n{    \r\n    const[response,setResponse]=useState(null);\r\n   const[error,setError]=useState(\"\");\r\n   const [isLoading,setIsLoading]=useState(false);\r\n    const call=async(payload,type='')=>\r\n    {   setResponse(null);\r\n        setIsLoading(true);\r\n        try{\r\n               let res= await API(urlObject,payload,type);\r\n               setResponse(res.data);\r\n        } catch(error)\r\n        {\r\n          setError(error.message);\r\n        }\r\n        finally{\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n    return {call,response,error,isLoading};\r\n}\r\nexport default useApi;","export const API_URLS={\r\n    savesentEmail:{\r\n        endpoint:'save',\r\n        method:'POST'\r\n    },\r\n    saveDraftEmails: {\r\n        endpoint: 'save-draft',\r\n        method: 'POST'\r\n    },\r\n    getEmailFromType: {\r\n        endpoint: 'emails',\r\n        method: 'GET'\r\n    },\r\n    toggleStarredMails: {\r\n        endpoint: 'starred',\r\n        method: 'POST'\r\n    },\r\n    deleteEmails: {\r\n        endpoint: 'delete',\r\n        method: 'DELETE'\r\n    },\r\n    moveEmailsToBin: {\r\n        endpoint: 'bin',\r\n        method : 'POST'\r\n        \r\n}\r\n}"],"names":["createSvgIcon","_jsx","d","IconWrapper","styled","Box","padding","Subject","Typography","fontSize","margin","display","Indicator","background","color","borderRadius","marginLeft","alignSelf","Image","width","height","backgroundColor","Container","EmailDate","openDrawer","useOutletContext","email","useLocation","state","moveEmailsToBinService","useApi","API_URLS","moveEmailsToBin","_jsxs","style","children","ArrowBack","onClick","window","history","back","Delete","call","_id","subject","component","src","emptyProfilePic","alt","marginTop","name","to","Date","date","toLocaleDateString","month","day","year","toLocaleTimeString","hour","minute","hour12","body","gmailLogo","EMPTY_TABS","inbox","heading","subHeading","drafts","starred","sent","bin","allmail","API_GMAIL","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","urlObject","payload","type","wrap","_context","prev","next","abrupt","axios","method","url","endpoint","data","stop","_x","_x2","_x3","apply","arguments","_useState","useState","_useState2","_slicedToArray","response","setResponse","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","res","_args","length","undefined","API","t0","message","finish","savesentEmail","saveDraftEmails","getEmailFromType","toggleStarredMails","deleteEmails"],"sourceRoot":""}